{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "cue",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#constant"
    },
    {
      "include": "#number"
    },
    {
      "include": "#comments"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.cue",
          "match": "\\b(if|while|for|return)\\b"
        }
      ]
    },
    "array": {
      "begin": "\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.array.begin.cue"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.array.end.cue"
        }
      },
      "name": "meta.structure.array.cue",
      "patterns": [
        {
          "include": "#value"
        },
        {
          "match": ",",
          "name": "punctuation.separator.array.cue"
        },
        {
          "match": "[^\\s\\]]",
          "name": "invalid.illegal.expected-array-separator.cue"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.cue"
            }
          },
          "match": "(//).*$\\n?",
          "name": "comment.line.double-slash.js"
        }
      ]
    },
    "constant": {
      "match": "\\b(?:null|bool|string|bytes|int|float)\\b",
      "name": "constant.language.cue"
    },
    "number": {
      "match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
      "name": "constant.numeric.cue"
    },
    "strings": {
      "name": "string.quoted.double.cue",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.cue",
          "match": "\\\\."
        }
      ]
    }
  },
  "scopeName": "source.cue"
}
